% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_shiny_testers.R
\name{use_shiny_testers}
\alias{use_shiny_testers}
\title{Use Shiny Testers}
\usage{
use_shiny_testers(.env = rlang::caller_env())
}
\arguments{
\item{.env}{Environment that defines effect scope. For expert use only.}
}
\value{
Implicit return of the updated functions in the Shiny package within
the specified environment.
}
\description{
Enable `update` functions in the Shiny package to be mocked in tests.
}
\examples{
library(shiny)
library(testthat)

example_server_fn <- function(input, output, session) {
  observeEvent(input$trigger, {
      updateTextInput(
      inputId = "result",
      label = "New Label",
      value = NULL,
      placeholder = "New placeholder"
    )
  })
}

test_that("Check that text input gets updated", {
  use_shiny_testers()

  shiny::testServer(
    app = example_server_fn,
    expr = {
      session$setInputs(result = "Example text")
      session$setInputs(trigger = 1L)

      expect_identical(input$result, "Example text")
      expect_identical(input$result.label, "New Label")
      expect_identical(input$result.placeholder, "New placeholder")
    }
  )
})

}
